{"version":3,"sources":["features/InputForm.module.css","footer/Footer.module.css","features/headersFilms/HeadersFilms.module.css","features/filmDescription/FilmDescription.module.css","api/api.ts","Redux/appReducer.ts","features/InputForm.tsx","features/headersFilms/HeadersFilms.tsx","features/filmDescription/FilmDescription.tsx","footer/Footer.tsx","App.tsx","reportWebVitals.ts","Redux/state.ts","index.tsx"],"names":["module","exports","key","axiosInstance","axios","create","baseURL","API","searchFilmsByTitle","title","query","get","searchPage","page","searchFilmsByType","id","initialState","body","headersBody","filmDescription","SetMoviesAC","type","FilmDescriptionAC","InputForm","value","onChange","searchFilm","className","s","header","nav","onKeyPress","e","onClick","HeadersFilms","decriptionsFelm","a","useSelector","state","movies","map","t","imdbID","src","Poster","FilmDescription","props","mainBlock","container","nainContainer","photo","text","Title","Year","Type","Plot","Footer","footer","footerContainer","containerIcon","href","App","dispatch","useDispatch","useState","changeTitle","setChangeTitle","useEffect","then","res","data","Search","catch","r","alert","getFilmDescription","currentTarget","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97d4fd48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"InputForm_header__23PBl\",\"title\":\"InputForm_title__206QI\",\"nav\":\"InputForm_nav__m_TAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__gfIDr\",\"footerContainer\":\"Footer_footerContainer__3lw40\",\"containerIcon\":\"Footer_containerIcon__3B0_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeadersFilms_header__3gcm-\",\"nav\":\"HeadersFilms_nav__C_NrG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FilmDescription_container__2qeF6\",\"mainBlock\":\"FilmDescription_mainBlock__3E4fC\",\"nainContainer\":\"FilmDescription_nainContainer__2OXK5\",\"text\":\"FilmDescription_text__Vyprz\",\"photo\":\"FilmDescription_photo__3IjVZ\"};","import axios from 'axios';\n\nexport type ResponseType = {\n    Poster: string\n    Title: string\n    Type: string\n    Year: string\n    imdbID: string\n}\n\nexport type RatingResponseType = {\n    Source: string\n    Value: string\n}\n\nexport type FilmDescriptionType = {\n    Actors: string\n    Awards: string\n    BoxOffice: string\n    Country: string\n    DVD: string\n    Director: string\n    Genre: string\n    Language: string\n    Metascore: string\n    Plot: string\n    Poster: string\n    Production: string\n    Rated: string\n    Ratings: RatingResponseType[]\n    Released: string\n    Response: string\n    Runtime: string\n    Title: string\n    Type: string\n    Website: string\n    Writer: string\n    Year: string\n    imdbID: string\n    imdbRating: string\n    imdbVotes: string\n    Error: string\n}\n\nconst configOMB = {\n    baseURL: 'http://www.omdbapi.com',\n};\nconst key = '?apikey=d5fd4a90';\nconst axiosInstance = axios.create(configOMB);\n\nconst API = {\n    searchFilmsByTitle: (title: string) => {\n        const query = `${key}&s=${title}`\n        return  axiosInstance.get(query)\n    },\n    searchPage: (page: number, title: string) => {\n        const query = `${key}&s=${title}&page=${page}`\n        return  axiosInstance.get(query)\n    },\n    searchFilmsByType: (id: string) => {\n        const query = `${key}&i=${id}`\n        return  axiosInstance.get(query)\n    }\n};\n\n//http://www.omdbapi.com/?apikey=d5fd4a90&i=tt10821190\nexport default API;","import {Dispatch} from 'redux'\nimport API, {FilmDescriptionType, ResponseType} from \"../api/api\";\n\n\nexport type MoviesResponseType = {\n    body: ResponseType[] ,\n    headersBody:ResponseType[],\n    filmDescription: FilmDescriptionType\n\n}\nconst initialState: MoviesResponseType = {body: [], headersBody:[], filmDescription:{} as FilmDescriptionType}\n\ntype MoviesActionsTypes = ReturnType<typeof SetMoviesAC>\n    |ReturnType<typeof SetHeadersAC>\n    |ReturnType<typeof FilmDescriptionAC>\n\nexport const moviesReducer = (state: MoviesResponseType = initialState, action: MoviesActionsTypes): MoviesResponseType => {\n    switch (action.type) {\n        case \"SET_SEARH_RESULT\":\n            return {...state, body: [...action.body]}\n\n        case \"SET_HEADERS\":{\n          return   {...state, headersBody: [...action.body]}\n        }\n        case \"FILM_DESCRIPTION\":{\n            return {...state, filmDescription: {...action.body}}\n        }\n        default:\n            return state;\n    }\n};\n\nexport const SetMoviesAC = (body: ResponseType[]) => ({type: 'SET_SEARH_RESULT', body} as const)\nexport const SetHeadersAC = (body: ResponseType[]) => ({type: 'SET_HEADERS', body} as const)\nexport const FilmDescriptionAC = (body: FilmDescriptionType  ) => ({type: 'FILM_DESCRIPTION', body} as const)\n\n\nexport const getDataFromServer = (title: string) => {\n    return (dispatch: Dispatch<any>) => {\n        API.searchFilmsByTitle(title)\n            .then((res) => {\n                dispatch(SetMoviesAC(res.data.Search))\n                dispatch(FilmDescriptionAC({} as FilmDescriptionType))\n            }).catch((r)=>{\n                alert(r)\n        })\n    }\n}\n\nexport const getHeadersFromUI = () => {\n    return (dispatch: Dispatch<any>) => {\n        API.searchFilmsByTitle('2020')\n            .then((res) => {\n                dispatch(SetHeadersAC(res.data.Search))\n            }).catch((r)=>{\n            alert(r)\n        })\n    }\n}\n\nexport const getFilmDescription = (id: string) => {\n    return (dispatch: Dispatch<any>) => {\n        API.searchFilmsByType(id)\n            .then((res) => {\n                dispatch(FilmDescriptionAC(res.data))\n                dispatch(SetMoviesAC([] as ResponseType[]))\n            }).catch((r)=>{\n            alert(r)\n        })\n    }\n}","import React, {ChangeEvent} from 'react';\nimport s from './InputForm.module.css'\n\n\ntype InputFormType = {\n    value: string\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\n    searchFilm: ()=>void\n}\n\n\nexport const InputForm: React.FC<InputFormType> = ({value, onChange, searchFilm}) => {\n\n    return (\n        <div className={s.header}>\n            <div className={s.title}> <h1>OMDb API</h1></div>\n            <div className={s.nav}>\n                <input value={value}\n                       onChange={onChange}\n                       onKeyPress={(e)=>{if (e.key === 'Enter') {searchFilm() }}} />\n                <button onClick={searchFilm}>Search</button>\n            </div>\n\n\n\n        </div>\n\n    );\n}\n\n\n","import React, {ChangeEvent} from 'react';\nimport s from './HeadersFilms.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../Redux/state\";\nimport {FilmDescriptionType, ResponseType} from \"../../api/api\";\n\n\ntype HeadersFilmsType = {\n    decriptionsFelm: (id: string) => void\n}\n\n\nexport const HeadersFilms: React.FC<HeadersFilmsType> = ({decriptionsFelm}) => {\n\n\n    let a = useSelector<AppRootStateType, ResponseType[]>(state => state.movies.headersBody)\n    let b = useSelector<AppRootStateType, FilmDescriptionType>(state => state.movies.filmDescription)\n\n    return (\n\n        <div className={s.header}>\n            <div className={s.nav}>\n                {\n                    a.map(t => <div onClick={() => {decriptionsFelm(t.imdbID)}}>\n                        <img src={t.Poster}/></div>)\n\n                }\n            </div>\n            <div>\n                {/*{\n                    b && <div>{b.Country}</div>\n                }*/}\n            </div>\n        </div>\n    );\n}","import React, {ChangeEvent} from 'react';\nimport s from './FilmDescription.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../Redux/state\";\nimport {FilmDescriptionType, ResponseType} from \"../../api/api\";\n\n\ntype DescriptionType = {\n    decriptionsFelm: (id: string) => void\n    Title?: string\n    Year?: string\n    imdbID: string\n    Type?: string\n    Plot?: string\n    Poster?: string\n}\n\n\nexport const FilmDescription= (props: DescriptionType) => {\n\n\n    let a = useSelector<AppRootStateType, ResponseType[]>(state => state.movies.headersBody)\n    let b = useSelector<AppRootStateType, FilmDescriptionType>(state => state.movies.filmDescription)\n\n    return (\n\n        <div className={s.mainBlock}>\n            <div className={`${s.container} ${s.nainContainer}`}>\n\n                <div className={s.photo}>\n                    {<img onClick={() => {props.decriptionsFelm(props.imdbID)}} src={props.Poster && props.Poster}/>}\n                </div>\n\n                <div className={s.text}>\n                    <div>Название: {props.Title && props.Title}</div>\n                    <div>Год: {props.Year && props.Title}</div>\n                    <div>Type: {props.Type && props.Type}</div>\n                    <div>Описание:{props.Plot && props.Plot}</div>\n                </div>\n\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\nimport styles from './../comand/styles/Container.module.css'\nimport s from './Footer.module.css'\n\n\nfunction Footer() {\n    return (\n        <div className={s.footer}>\n            <div className={s.footerContainer}>\n{/*                <h2>'Segrey Tkachuk'</h2>*/}\n\n                <div className={s.containerIcon}>\n\n                    <div><a href={''}>linkedin</a></div>\n                    <div><a href={''}>github</a></div>\n                    <div><a href={''}>codewars</a></div>\n                    <div><a href={''}>facebook</a></div>\n                </div>\n                <span>© 2021 Все права защищены</span>\n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Footer\n/*\n<ul>\n<li><a href={''}>facebook</a> </li>\n    <li><a href={''}>facebook</a> </li>\n    <li><a href={''}>facebook</a> </li>\n    <li><a href={''}>facebook</a> </li>\n    </ul>*/\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getDataFromServer, getFilmDescription, getHeadersFromUI, MoviesResponseType} from \"./Redux/appReducer\";\nimport {AppRootStateType} from \"./Redux/state\";\nimport {InputForm} from \"./features/InputForm\";\nimport {FilmDescriptionType, ResponseType} from \"./api/api\";\nimport {HeadersFilms} from \"./features/headersFilms/HeadersFilms\";\nimport {FilmDescription} from \"./features/filmDescription/FilmDescription\";\nimport Footer from \"./footer/Footer\";\n\nfunction App() {\n\n    const dispatch = useDispatch()\n    let movies = useSelector<AppRootStateType, MoviesResponseType>(state => state.movies)\n    let filmDescription = useSelector<AppRootStateType, FilmDescriptionType>(state => state.movies.filmDescription)\n    /*let a = useSelector<AppRootStateType, ResponseType[]>(state => state.movies.headersBody)*/\n    const [changeTitle, setChangeTitle] = useState('');\n\n    useEffect(() => {\n        dispatch(getHeadersFromUI())\n    }, [filmDescription])\n\n\n    const searchFilm = () => dispatch(getDataFromServer(changeTitle))\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChangeTitle(e.currentTarget.value)\n    }\n\n    const decriptionsFelm = (id: string) => {\n        dispatch(getFilmDescription(id))\n    }\n\n    return (\n\n\n        <div className=\"App\">\n\n\n\n\n            <InputForm onChange={onChange} value={changeTitle} searchFilm={searchFilm}/>\n            <HeadersFilms decriptionsFelm={decriptionsFelm}/>\n            {filmDescription.Title &&  <FilmDescription\n                decriptionsFelm={decriptionsFelm}\n                imdbID={filmDescription.imdbID}\n                Title={filmDescription.Title }\n                Plot={filmDescription.Plot}\n                Poster={filmDescription.Poster}\n            />}\n\n            {\n                 movies.body.map(t=><div>{\n                    <FilmDescription\n                        decriptionsFelm={decriptionsFelm}\n                        imdbID={t.imdbID}\n                        Title={t.Title }\n                        Plot={t.Type}\n                        Poster={t.Poster}\n                    />\n                }</div>)\n            }\n<Footer/>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk'\nimport {moviesReducer} from \"./appReducer\";\n\nconst reducers = combineReducers({\n    movies:moviesReducer\n});\nexport type AppRootStateType = ReturnType<typeof reducers>;\n\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/state\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}